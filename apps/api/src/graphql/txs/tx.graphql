type Query {
  tx(hash: String!): Transaction
  txs(limit: Int, page: Int, fromBlock: Int): [Transaction]
  txsForAddress(hash: String!, filter: FilterEnum!, limit: Int, page: Int): [Transaction]
  totalNumberOfTransactions: Int
}

type Subscription {
  newTxs: [Transaction]
}

type Transaction {
  hash: String
  nonce: String
  blockHash: String
  blockNumber: String
  transactionIndex: Int
  from: String
  to: String
  value: String
  gas: String
  gasPrice: String
  input: Buffer
  v: String
  r: String
  s: String
  timestamp: String
  creates: String
  chainId: String
  receipt: Receipt
  successful: Boolean
}

type Receipt {
  transactionHash: String
  transactionIndex: String
  blockHash: String
  blockNumber: String
  from: String
  to: String
  contractAddress: String
  cumulativeGasUsed: String
  gasUsed: String
  logs: String
  logsBloom: String
  root: String
  status: String
}

type Trace {
  blockHash: String
  transactionHash: String
  traceAddress: String
  transactionPosition: Int
  blockNumber: String
  subtraces: Int
  error: String
  type: String
  action: String
  result: String
}

enum Order {
  asc, desc
}
